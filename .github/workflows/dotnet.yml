name: Build & Publish NuGet

on:
  push:
    branches:
      - master
      - legacy
    tags:
      - 'v*.*.*' # release tags

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Test
        run: dotnet test -c Release --no-build --verbosity normal

      - name: Set package version
        id: vars
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            # Tagged release: strip 'refs/tags/' prefix
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ "${GITHUB_REF_NAME}" == "legacy" ]]; then
            VERSION="0.3.${GITHUB_RUN_NUMBER}"        # Legacy branch prerelease
          elif [[ "${GITHUB_REF_NAME}" == "master" ]]; then
            VERSION="0.4.0-beta.${GITHUB_RUN_NUMBER}" # Master branch prerelease
          else
            VERSION="0.0.0-ci.${GITHUB_RUN_NUMBER}"   # Fallback
          fi
          echo "Version set to $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Pack NuGet package
        run: dotnet pack src/ChromaFx/ChromaFx.csproj -c Release -o ./artifacts /p:Version=$VERSION --no-build

      - name: Publish to NuGet
        run: dotnet nuget push "./artifacts/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
